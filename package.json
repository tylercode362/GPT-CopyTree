{
  "name": "gpt-copytree",
  "displayName": "GPT-CopyTree",
  "description": "Provides a tree view display of files and directories, with a key feature of enabling easy file copying",
  "version": "1.1.1",
  "publisher": "Tyler362",
  "icon": "media/logo.png",
  "engines": {
    "vscode": "^1.78.0"
  },
  "categories": ["Formatters", "Visualization", "Programming Languages", "other"],
  "scripts": {
    "vscode:prepublish": "tsc -p ./",
    "compile": "tsc -watch -p ./",
    "test": "yarn compile && node ./out/test/runTest.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/tylercode362/GPT-CopyTree.git"
  },
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "title": "GPT-CopyTree Settings",
      "properties": {
        "gpt-copytree.gptTemplates": {
          "type": "object",
          "default": {
            "Remember Only": "Hold onto these codes, do not transmit them back instantly. \n\n %content%",
            "Execute Order": "%content% \n\n Execute Order: ",
            "Just Copy": "%content%"
          },
          "description": "This configuration allows you to add frequently used 'gpt-copytree.gptTemplates'. The '%content%' placeholder can be used to represent the position of the copied file name and content within the template."
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "gpt-copytree-container",
          "title": "GPT-CopyTree",
          "icon": "media/logo.svg"
        }
      ]
    },
    "views": {
      "gpt-copytree-container": [
        {
          "id": "gpt-copytree-panel",
          "name": "File Tree"
        }
      ]
    },
    "commands": [
      {
        "command": "gpt-copytree.refresh",
        "title": "Refresh",
        "icon": {
          "light": "media/refresh.svg",
          "dark": "media/refresh_inverse.svg"
        }
      },
      {
        "command": "gpt-copytree.copy",
        "title": "Copy Content",
        "icon": {
          "light": "media/copy.svg",
          "dark": "media/copy_inverse.svg"
        }
      },
      {
        "command": "gpt-copytree.clear",
        "title": "Clear Selected",
        "icon": {
          "light": "media/clear.svg",
          "dark": "media/clear_inverse.svg"
        }
      },
      {
        "command": "gpt-copytree.collapseAllDirectories",
        "title": "Collapse All Directories",
        "icon": {
          "light": "media/collapse.svg",
          "dark": "media/collapse_inverse.svg"
        }
      },
      {
        "command": "gpt-copytree.openSettings",
        "title": "Open GPT-CopyTree Settings",
        "icon": {
          "light": "media/settings.svg",
          "dark": "media/settings_inverse.svg"
        }
      },
      {
        "command": "gpt-copytree.toggleSelect",
        "title": "Toggle Select"
      },
      {
        "command": "gpt-copytree.openFile",
        "title": "Open File",
        "category": "File Operations"
      },
      {
        "command": "gpt-copytree.rename",
        "title": "Rename",
        "category": "File Operations"
      },
      {
        "command": "gpt-copytree.delete",
        "title": "Delete",
        "category": "File Operations"
      },
      {
        "command": "gpt-copytree.newFolder",
        "title": "New Folder",
        "category": "File Operations"
      },
      {
        "command": "gpt-copytree.newFile",
        "title": "New File",
        "category": "File Operations"
      }
    ],
    "menus": {
      "view/item/context": [
        {
          "command": "gpt-copytree.newFile",
          "when": "view == gpt-copytree-panel && viewItem == folder || viewItem == workSpace",
          "group": "1_modification"
        },
        {
          "command": "gpt-copytree.newFolder",
          "when": "view == gpt-copytree-panel && (viewItem == folder || viewItem == workSpace)",
          "group": "1_modification"
        },
        {
          "command": "gpt-copytree.openFile",
          "when": "view == gpt-copytree-panel && viewItem == file",
          "group": "1_modification"
        },
        {
          "command": "gpt-copytree.rename",
          "when": "view == gpt-copytree-panel && (viewItem != workSpace)",
          "group": "2_modification@0"
        },
        {
          "command": "gpt-copytree.delete",
          "when": "view == gpt-copytree-panel && (viewItem != workSpace)",
          "group": "2_modification@1"
        }
      ],
      "view/title": [
        {
          "command": "gpt-copytree.copy",
          "group": "navigation@0",
          "when": "view == gpt-copytree-panel"
        },
        {
          "command": "gpt-copytree.refresh",
          "group": "navigation@1",
          "when": "view == gpt-copytree-panel"
        },
        {
          "command": "gpt-copytree.collapseAllDirectories",
          "group": "navigation@2",
          "when": "view == gpt-copytree-panel"
        },
        {
          "command": "gpt-copytree.clear",
          "group": "navigation@3",
          "when": "view == gpt-copytree-panel"
        },
        {
          "command": "gpt-copytree.openSettings",
          "group": "navigation@4",
          "when": "view == gpt-copytree-panel"
        }
      ]
    }
  },
  "activationEvents": [],
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "^18.16.0",
    "@vscode/test-electron": "^2.3.2",
    "tslint": "^6.1.3",
    "typescript": "^5.0.4"
  },
  "dependencies": {
    "@types/vscode": "^1.78.0",
    "istextorbinary": "^6.0.0"
  }
}